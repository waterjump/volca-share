.clearfix
  .col-xl-9.col-lg-9.col-md-9.col-sm-12#patch-title
    %h1.hidden= "#{@patch.name} by #{@patch.username || '¯\_(ツ)_/¯'}"
    %span.h1
      = @patch.name
      .small
        by
        - if @patch.user.present?
          = link_to(@patch.username, user_path(@patch.user.slug))
        - else
          ¯\_(ツ)_/¯
= render 'shared/midi_control'
#interface.col-lg-9.show
  .stretchy
    .volca.bass
      .small.knob.eg.midi-enabled.lit#attack{ data: { midi: @patch.attack || 63, control_number: 46 } }
        .notch
      .small.knob.eg.midi-enabled.lit#decay_release{ data: { midi: @patch.decay_release || 63, control_number: 47 } }
        .notch
      .small.knob.eg.midi-enabled.lit#cutoff_eg_int{ data: { midi: @patch.cutoff_eg_int || 63, control_number: 48 } }
        .notch
      #led
        .digit#thousands
        .digit#hundreds
        .digit#tens
        .digit#ones
      .medium.knob.midi-enabled#octave{ data: { midi: @patch.octave || 63, control_number: 40 } }
        .notch
      .medium.knob#peak{ data: { midi: @patch.peak || 63, control_number: 0 } }
        .notch
      .large.knob#cutoff{ data: { midi: @patch.cutoff || 63, control_number: 0 } }
        .notch
      .medium.knob.lfo.midi-enabled#lfo_rate{ data: { midi: @patch.lfo_rate || 63, control_number: 41 } }
        .notch
      .medium.knob.lfo.midi-enabled#lfo_int{ data: { midi: @patch.lfo_int || 63, control_number: 42 } }
        .notch
      .small.knob.vco.midi-enabled#vco1_pitch{ data: { midi: @patch.vco1_pitch || 63, control_number: 43 }, class: @patch.lit?(:vco1_active) }
        .notch
      .small.knob.vco.midi-enabled#vco2_pitch{ data: { midi: @patch.vco2_pitch || 63, control_number: 44 }, class: @patch.lit?(:vco2_active) }
        .notch
      .small.knob.vco.midi-enabled#vco3_pitch{ data: { midi: @patch.vco3_pitch || 63, control_number: 45 }, class: @patch.lit?(:vco3_active) }
        .notch
      .button#vco1_active_button{ data: { active: @patch.vco1_active.to_s || 'true' }, class: @patch.lit?(:vco1_active) }
      .button#vco2_active_button{ data: { active: @patch.vco2_active.to_s || 'true' }, class: @patch.lit?(:vco2_active) }
      .button#vco3_active_button{ data: { active: @patch.vco3_active.to_s || 'true' }, class: @patch.lit?(:vco3_active) }
      .bottom-row
        = label_tag('patch[vco_group_one]') do
          %span
            .note-light.note-0.lit
            .light{ id: 'vco_group_one_light', class: @patch.vco_group_one ? 'lit' : '' }

        = label_tag('patch[vco_group_two]') do
          %span
            .note-light.note-1.lit
            .light{ id: 'vco_group_two_light', class: @patch.vco_group_two ? 'lit' : '' }

        = label_tag('patch[vco_group_three]') do
          %span
            .note-light.note-2.lit
            .light{ id: 'vco_group_three_light', class: @patch.vco_group_three ? 'lit' : '' }

        = label_tag('patch[lfo_target_amp]') do
          %span
            .note-light.note-3.lit
            .light{ id: 'lfo_target_amp_light', class: @patch.lit?(:lfo_target_amp) }

        = label_tag('patch[lfo_target_pitch]') do
          %span
            .note-light.note-4.lit
            .light{ id: 'lfo_target_pitch_light', class: @patch.lit?(:lfo_target_pitch) }

        = label_tag('patch[lfo_target_cutoff]') do
          %span
            .note-light.note-5.lit
            .light{ id: 'lfo_target_cutoff_light', class: @patch.lit?(:lfo_target_cutoff) }

        = label_tag('patch[lfo_wave]') do
          %span
            .note-light.note-6.lit
            .light{ id: 'lfo_wave_light', class: @patch.lit?(:lfo_wave) }

        = label_tag('patch[vco1_wave]') do
          %span
            .note-light.note-7.lit
            .light{ id: 'vco1_wave_light', class: @patch.lit?(:vco1_wave) }

        = label_tag('patch[vco2_wave]') do
          %span
            .note-light.note-8.lit
            .light{ id: 'vco2_wave_light', class: @patch.lit?(:vco2_wave) }

        = label_tag('patch[vco3_wave]') do
          %span
            .note-light.note-9.lit
            .light{ id: 'vco3_wave_light', class: @patch.lit?(:vco3_wave) }

        = label_tag('patch[sustain_on]') do
          %span
            .note-light.note-10.lit
            .light{ id: 'sustain_on_light', class: @patch.lit?(:sustain_on) }

        = label_tag('patch[amp_eg_on]') do
          %span
            .note-light.note-11.lit
            .light{ id: 'amp_eg_on_light', class: @patch.lit?(:amp_eg_on) }
  .field.sequence-area
    .sequence-holder
      - if @patch.sequences.present?
        = render 'sequences/show'
#patch-metadata.col-md-9.col-lg-3
  - show_class = @patch.show_midi_only_knobs? ? '' : :hidden
  .q{ class: show_class }
    #midi-only-panel
      #midi-only-title
        .h5 MIDI-only controls
      .stretchy2
        #midi-only-controls.clearfix
          .knob.medium#slide_time{ data: { midi: @patch.slide_time || 63, control_number: 5 } }
            .notch
          .knob.medium#expression{ data: { midi: @patch.expression || 127 , control_number: 11 } }
            .notch
          .knob.medium#gate_time{ data: { midi: @patch.gate_time || 127, control_number: 49 } }
            .notch

  .mb-3

    -# TODO: Enable emulation link when the time comes. :-]
      .h3
        = link_to 'Emulation (experimental)',
                  bass_emulator_path(@patch.emulator_query_string)
    = render 'shared/midi_button', button_text: 'Send this patch to your Volca', new_form: false

  - if @patch.tags.any?
    = label_tag 'patch[tags]', 'Tags'
    %p
      - @patch.tags.each do |tag|
        = link_to "\##{tag}", tags_show_path(tag: tag), class: :tag
  - if @patch.notes.present?
    = label_tag 'patch[notes]', 'Notes'
    .well
      = @patch.notes
  - if @patch.audio_sample_code.present?
    = label_tag 'patch[audio_sample]', 'Audio sample'
    .sample{ data: { embed_code: @patch.audio_sample_code }}
.col-sm-12
  .form-detail-actions
    - if @patch.user.present? && @patch.user == current_user
      = link_to 'Edit', edit_patch_path(@patch)
      \|
      = form_tag patch_path(@patch), method: :delete do
        = submit_tag 'Delete', class: :link
    - if !current_user.present?
      %strong
        = "To edit or delete your patches, "
        = link_to 'create an account', new_user_registration_path
= render 'knob_debug'
