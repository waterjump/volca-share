VS.Knob = function(element) {
  this.element = element;
  this.jElement = $(this.element);
  this.midi = this.jElement.data('midi');
  this.rotation = this.jElement.data('rotation') || 0;
  this.displayStyle = 'midiString';
  this.inputElement = $(`input#patch_${this.jElement.attr('id')}`);

  this.setLimits = function() {
    if (this.jElement.hasClass('dark')) {
      this.leftLimit = -90;
      this.rightLimit = 60;
    } else {
      this.leftLimit = -140;
      this.rightLimit = 140;
    }
  };

  this.setLimits();

  this.setDisplayStyle = function() {
    if (this.jElement.attr('id').split('_')[1] === 'pitch') {
      if ($('.volca.keys').length == 0) {
        this.displayStyle = 'pitchString';
      }
    } else if (this.jElement.attr('id') === 'octave') {
      this.displayStyle = 'octaveString';
    }
  };

  this.setDisplayStyle();

  this.rotate = function(degree) {
    const knob = this.jElement;
    knob.css('-moz-transform', `rotate(${degree}deg)`);
    knob.css('-moz-transform-origin', '50% 50%');
    knob.css('-webkit-transform', `rotate(${degree}deg)`);
    knob.css('-webkit-transform-origin', '50% 50%');
    knob.css('-o-transform', `rotate(${degree}deg)`);
    knob.css('-o-transform-origin', '50% 50%');
    knob.css('-ms-transform', `rotate(${degree}deg)`);
    knob.css('-ms-transform-origin', '50% 50%');
  };

  this.degreeForMidi = function(midi, limit) {
    if (this.jElement.hasClass('dark')) {
      midiToAngleMap = {
        '10': -90,
        '30': -60,
        '50': -30,
        '70': 0,
        '100': 30,
        '120': 60
      };

      return midiToAngleMap[midi];
    } else {
      return Math.round((midi - 63.5) / (63.5 / limit));
    }
  };

  this.autoRotate = function(d) {
    const scope = this;
    <% if Rails.env.test? %>
    this.jElement.css({transform: `rotate(${d}deg)`});
    <% else %>
    const currentRotation = parseInt(this.rotation);
    $({deg: currentRotation}).animate({ deg: d }, { step(now, fx) {
      scope.jElement.css({transform: `rotate(${now}deg)`});
    }
  }
    );
    <% end %>
  };

  this.setKnob = function(midiValue) {
    this.jElement.data('midi', midiValue);
    let degree = this.degreeForMidi(midiValue, 140);
    this.jElement.data('rotation', degree);
    this.autoRotate(degree)
  };
};
